services:
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_NUM_PARTITIONS: 6
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      CLUSTER_ID: kNFrvg6XabjA9shMMUEdBw
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list"]
      interval: 15s
      timeout: 10s
      retries: 8
    restart: unless-stopped

  mongo:
    image: mongo:7.0
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--quiet", "--eval", "db.runCommand({ ping: 1 })"]
      interval: 15s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  frontend:
    build:
      context: ./ui/react-native
    container_name: frontend
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 15s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  rest:
    build:
      context: .
      dockerfile: backend/rest-service/Dockerfile
    container_name: rest
    environment:
      - JAVA_OPTS=
    ports:
      - "8081:8080"
    restart: unless-stopped

  sse:
    build:
      context: .
      dockerfile: backend/sse-service/Dockerfile
    container_name: sse
    environment:
      - JAVA_OPTS=
    ports:
      - "8082:8080"
    restart: unless-stopped

  nginx:
    image: nginx:1.25-alpine
    container_name: nginx
    depends_on:
      - frontend
      - rest
      - sse
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8080:80"
    restart: unless-stopped

  ingest-usa-fed:
    build:
      context: .
      dockerfile: services/ingest-usa-fed/Dockerfile
    container_name: ingest-usa-fed
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - CONGRESS_BASE_URL=https://api.congress.gov/v3
      - CONGRESS_API_KEY=${CONGRESS_API_KEY:-demo-api-key}
      - CONGRESS_POLL_INTERVAL=PT5M
      - CONGRESS_DEFAULT_CHAMBER=Senate
      - STATEFUL_MONGO_HOST=mongo
      - STATEFUL_MONGO_PORT=27017
      - STATEFUL_MONGO_DATABASE=accountability_stateful
    restart: unless-stopped

volumes:
  mongo-data:
